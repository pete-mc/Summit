name: Build and Release Extension

on:
  push:
    branches:
      - main
  
permissions:
  contents: write
  packages: write

jobs:
  check_commit:
    runs-on: ubuntu-latest
    outputs:
      version_commit: ${{ steps.check.outputs.version_commit }}
    steps:
    - id: check
      run: |
        COMMIT_MSG=${{ github.event.head_commit.message }}
        if [[ "${COMMIT_MSG}" =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
          echo "::set-output name=version_commit::true"
        else
          echo "::set-output name=version_commit::false"
        fi
  
  build:
    needs: check_commit
    if: needs.check_commit.outputs.version_commit == 'true' && github.actor != 'dependabot[bot]' && github.actor != 'dependabot-preview[bot]'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Cache node modules
      uses: actions/cache@v3
      with:
        path: ./summit/node_modules
        key: ${{ runner.os }}-node-summit-${{ hashFiles('./summit/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-summit-${{ hashFiles('./summit/package-lock.json') }}

    - name: Cache node modules
      uses: actions/cache@v3
      with:
        path: ./bootstrapper/node_modules
        key: ${{ runner.os }}-node-bootstrapper-${{ hashFiles('./bootstrapper/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-bootstrapper-${{ hashFiles('./bootstrapper/package-lock.json') }}

    - name: Setup Node.js environment
      uses: actions/setup-node@v4

    - name: Install jq
      run: sudo apt-get install jq

    - name: Extract version
      id: get_version
      run: |
        cd summit
        VERSION=$(jq -r .version package.json)
        echo "VERSION=$VERSION" >> $GITHUB_ENV
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        echo "Version is ${{ env.VERSION }}"

    - name: Create bin directory
      run: |
        mkdir -p ./summit/bin
        mkdir -p ./summit/bin/dependencies
      working-directory: ${{ github.workspace }}

    - name: Install global dependencies
      run: npm install -g webpack @types/jest jest typescript webpack-cli webpack npm-run-all

    - name: Install dependencies
      run: |
        cd summit
        npm ci

    - name: Build Contents
      run: npx webpack --config webpack.prod.js
      working-directory: ${{ github.workspace }}/summit

    - name: Install dependencies
      run: |
        cd bootstrapper
        npm ci

    - name: Build project
      run: npx webpack --config webpack.prod.js
      working-directory: ${{ github.workspace }}/bootstrapper

    - name: Zip summit
      run: |
        cd bootstrapper
        zip -r summit.zip manifest.json bin/summit-bootstrap.js styles/* images/*
   
    - name: Install xmlstarlet
      run: sudo apt-get install -y xmlstarlet

    - name: Upload JS as artifact
      if: github.ref != 'refs/heads/main'
      uses: actions/upload-artifact@v4
      with:
        name: summit-js
        path: ./summit/bin/summit.js

    - name: Create Release
      if: github.ref == 'refs/heads/main'
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.get_version.outputs.VERSION }}
        release_name: Release ${{ steps.get_version.outputs.VERSION }}
        draft: false
        prerelease: false
        
    - name: Upload Release Asset
      if: github.ref == 'refs/heads/main'
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./bootstrapper/summit.zip
        asset_name: summit.zip
        asset_content_type: application/zip

    - name: Upload JS Release Asset
      if: github.ref == 'refs/heads/main'
      id: upload-js-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./summit/bin/summit.js
        asset_name: summit.js
        asset_content_type: application/javascript
    
    - name: Setup Node.js environment
      uses: actions/setup-node@v4
      with: 
        registry-url: 'https://registry.npmjs.org'

    - name: Publish
      continue-on-error: true
      if: github.ref == 'refs/heads/main'
      run:  |
        cd npm
        npm publish
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

    - name: Upload to Chrome Web Store
      continue-on-error: true
      if: github.ref == 'refs/heads/main'
      uses: mnao305/chrome-extension-upload@v4.0.1
      with:
        file-path: ./bootstrapper/summit.zip
        extension-id: ${{ secrets.CHORME_EXTENSION_ID }}
        client-id: ${{ secrets.GOOGLE_ACCOUNT_CLIENT_ID }}
        client-secret: ${{ secrets.GOOGLE_ACCOUNT_CLIENT_SECRET }}
        refresh-token: ${{ secrets.GOOGLE_ACCOUNT_REFRESH_TOKEN }}
        publish: false
  
    - name: Publish to Microsoft Edge Store
      continue-on-error: true
      uses: wdzeng/edge-addon@v1
      if: github.ref == 'refs/heads/main'
      with:
        product-id: ${{ secrets.EDGE_EXTENSION_ID }}
        zip-path: ./bootstrapper/summit.zip
        client-id: ${{ secrets.EDGE_CLIENT_ID }}
        client-secret: ${{ secrets.EDGE_CLIENT_SECRET }}
        access-token-url: ${{ secrets.EDGE_REFRESH_TOKEN_URL }}
        upload-only: true
