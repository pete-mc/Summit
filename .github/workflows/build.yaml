name: Build and Release Chrome Extension

on:
  push:
    branches:
      - main
      - 2.5.0
    paths:
      - 'bootstrapper/**'
      - 'cordova-app/**'
      - 'summit/**'

permissions:
  contents: write
  packages: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Setup Node.js environment
      uses: actions/setup-node@v4

    - name: Install jq
      run: sudo apt-get install jq

    - name: Extract version
      id: get_version
      run: |
        cd bootstrapper
        VERSION=$(jq -r .version manifest.json)
        echo "VERSION=$VERSION" >> $GITHUB_ENV
        echo "version=$VERSION" >> $GITHUB_OUTPUT

    - name: Print version
      run: echo "Version is ${{ env.VERSION }}"

    - name: Check if release already exists
      if: github.ref == 'refs/heads/main'
      id: check_release
      run: |
        RELEASE=$(curl --silent "https://api.github.com/repos/$GITHUB_REPOSITORY/releases/tags/${{ steps.get_version.outputs.VERSION }}" -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" || echo '{"message": "Not Found"}')
        MESSAGE=$(echo $RELEASE | jq -r .message)
        if [[ $MESSAGE == "Not Found" ]]; then
          echo "Release with version ${{ steps.get_version.outputs.VERSION }} does not exist."
        else
          echo "Release with version ${{ steps.get_version.outputs.VERSION }} already exists."
          exit 1
        fi

    - name: Create bin directory
      run: |
        mkdir -p ./summit/bin
        mkdir -p ./bootstrapper/bin
      working-directory: ${{ github.workspace }}

    - name: Install global dependencies
      run: npm install -g webpack @types/jest @vscode/vsce cordova jest typescript webpack-cli webpack npm-run-all

    - name: Install dependencies
      run: |
        cd summit
        npm ci
        cd ../bootstrapper
        npm ci
      
    - name: Remove and re-add Android platform
      run: |
        cd cordova-app
        cordova platform rm android
        cordova platform add android

    - name: Build Contents
      run: npx webpack --config webpack.prod.js
      working-directory: ${{ github.workspace }}/summit

    - name: Build project
      run: npx webpack --config webpack.prod.js
      working-directory: ${{ github.workspace }}/bootstrapper
    
    - name: Install xmlstarlet
      run: sudo apt-get install -y xmlstarlet

    - name: Build Cordova app
      run: |
        echo ${{ secrets.PLAY_UPLOAD_KEYSTORE }} | base64 --decode > upload-key.keystore
        cd cordova-app
        cordova prepare
        cordova build android --release -- --keystore=../upload-key.keystore --storePassword=${{ secrets.PLAY_UPLOAD_PASSWORD }} --alias=${{ secrets.PLAY_UPLOAD_ALIAS }} --password=${{ secrets.PLAY_UPLOAD_PASSWORD }}

    - name: Sign AAB
      run: |
        jarsigner -verbose -sigalg SHA1withRSA -digestalg SHA1 -keystore upload-key.keystore -storepass ${{ secrets.PLAY_UPLOAD_PASSWORD }} -keypass ${{ secrets.PLAY_UPLOAD_PASSWORD }} cordova-app/platforms/android/app/build/outputs/bundle/release/app-release.aab ${{ secrets.PLAY_UPLOAD_ALIAS }}

    - name: Zip summit
      run: |
        cd bootstrapper
        zip -r summit.zip manifest.json bin/summit-bootstrap.js styles/* images/*

    - name: Upload web extension as artifact
      if: github.ref == 'refs/heads/dev'
      uses: actions/upload-artifact@v2
      with:
        name: web-extension
        path: ./bootstrapper/summit.zip


    - name: Upload AAB as artifact
      if: github.ref == 'refs/heads/dev'
      uses: actions/upload-artifact@v2
      with:
        name: android-app
        path: ./cordova-app/platforms/android/app/build/outputs/bundle/release/app-release.aab

    - name: Upload JS as artifact
      if: github.ref == 'refs/heads/dev'
      uses: actions/upload-artifact@v2
      with:
        name: summit-js
        path: ./summit/bin/summit.js

    - name: Create Release
      if: github.ref == 'refs/heads/main'
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.get_version.outputs.VERSION }}
        release_name: Release ${{ steps.get_version.outputs.VERSION }}
        draft: false
        prerelease: false

    - name: Upload Release Asset
      if: github.ref == 'refs/heads/main'
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./bootstrapper/summit.zip
        asset_name: summit.zip
        asset_content_type: application/zip
    
    - name: Upload AAB Release Asset
      if: github.ref == 'refs/heads/main'
      id: upload-aab-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./cordova-app/platforms/android/app/build/outputs/bundle/release/app-release.aab
        asset_name: app-release.aab
        asset_content_type: application/vnd.android.package-archive

    - name: Upload JS Release Asset
      if: github.ref == 'refs/heads/main'
      id: upload-js-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./summit/bin/summit.js
        asset_name: summit.js
        asset_content_type: application/javascript
    
    - name: Setup Node.js environment
      uses: actions/setup-node@v4
      with: 
        registry-url: 'https://registry.npmjs.org'

    - name: Publish
      if: github.ref == 'refs/heads/main'
      run:  |
        cd npm
        npm publish
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

    - name: Setup Node.js environment
      uses: actions/setup-node@v4
      with: 
        registry-url: 'https://npm.pkg.github.com'

    - uses: wdzeng/edge-addon@v1
      if: github.ref == 'refs/heads/main'
      with:
        product-id: ${{ secrets.EDGE_EXTENSION_ID }}
        zip-path: ./bootstrapper/summit.zip
        client-id: ${{ secrets.EDGE_CLIENT_ID }}
        client-secret: ${{ secrets.EDGE_CLIENT_SECRET }}
        access-token-url: ${{ secrets.EDGE_REFRESH_TOKEN_URL }}

    - name: Upload & release
      if: github.ref == 'refs/heads/main'
      uses: mnao305/chrome-extension-upload@v4.0.1
      with:
        file-path: ./bootstrapper/summit.zip
        extension-id: ${{ secrets.CHORME_EXTENSION_ID }}
        client-id: ${{ secrets.GOOGLE_ACCOUNT_CLIENT_ID }}
        client-secret: ${{ secrets.GOOGLE_ACCOUNT_CLIENT_SECRET }}
        refresh-token: ${{ secrets.GOOGLE_ACCOUNT_REFRESH_TOKEN }}

    -uses: r0adkll/upload-google-play@v1
    with:
      serviceAccountJsonPlainText: ${{ GOOGLE_SERVICE_ACCOUNT_JSON }}
      packageName: xyz.mcdonald.terrainsummit
      releaseFiles: ./cordova-app/platforms/android/app/build/outputs/bundle/release/app-release.aab
      track: alpha
      status: completed
      releaseName: ${{ steps.get_version.outputs.VERSION }}