name: Build and Release Chrome Extension

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Setup Node.js environment
      uses: actions/setup-node@v2

    - name: Install jq
      run: sudo apt-get install jq

    - name: Extract version
      id: get_version
      run: echo "::set-output name=VERSION::$(jq -r .version manifest.json)"

    - name: Check if release already exists
      id: check_release
      run: |
        RELEASE=$(curl --silent "https://api.github.com/repos/$GITHUB_REPOSITORY/releases/tags/${{ steps.get_version.outputs.VERSION }}" -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" || echo "Not Found")
        if [[ $RELEASE != "Not Found" ]]; then
          echo "Release with version ${{ steps.get_version.outputs.VERSION }} already exists."
          exit 1
        fi

    - name: Create bin directory
      run: mkdir -p ./bin
      working-directory: ${{ github.workspace }}

    - name: Install global dependencies
      run: npm install -g webpack @types/jest @vscode/vsce cordova jest typescript webpack-cli webpack

    - name: Install dependencies
      run: npm ci

    - name: Build project
      run: npx webpack --config webpack.prod.js
      working-directory: ${{ github.workspace }}

    - name: Zip summit
      run: zip -r summit.zip manifest.json bin/summit.js styles/* images/*

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.get_version.outputs.VERSION }}
        release_name: Release ${{ steps.get_version.outputs.VERSION }}
        draft: false
        prerelease: false

    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./summit.zip
        asset_name: summit.zip
        asset_content_type: application/zip

    - name: Upload to Chrome Web Store
      uses: Kibibit/chrome-extension-deploy@master
      with:
        clientId: ${{ secrets.GOOGLE_ACCOUNT_CLIENT_ID }}
        clientEmail: ${{ secrets.GOOGLE_ACCOUNT_CLIENT_EMAIL }}
        privateKey: ${{ secrets.GOOGLE_ACCOUNT_PRIVATE_KEY }}
        extensionId: ${{ secrets.CHORME_EXTENSION_ID }}
        zipPath: './summit.zip'

#     - name: Build Cordova app
#       run: |
#         cd cordova-app
#         cordova build android